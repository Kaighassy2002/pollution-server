const { sendWhatsAppMessage, initWhatsApp, closeBrowser } = require("../Service/puppeter");
const User = require("../Models/userModel"); // Import User model

exports.sendMessages = async (req, res) => {
  try {
    const { users } = req.body;

    if (!users || !Array.isArray(users) || users.length === 0) {
      return res.status(400).json({ error: "No users provided" });
    }

    await initWhatsApp(); // Start WhatsApp session

    let updatedUsers = [];

    const sentNumbers = new Set(); // Store numbers that have already received messages

    for (let user of users) {
      if (!sentNumbers.has(user.mobile)) {
        const message = `‡¥™‡µç‡¥∞‡¥ø‡¥Ø ‡¥â‡¥™‡¥≠‡µã‡¥ï‡µç‡¥§‡¥æ‡¥µ‡µá, ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥µ‡¥æ‡¥π‡¥®‡¥Ç üöó (${user.vehicleNo})‡¥Ø‡µÅ‡¥ü‡µÜ ‡¥™‡µÅ‡¥ï ‡¥™‡¥∞‡¥ø‡¥∂‡µã‡¥ß‡¥® ${user.uptoDate} ‡¥®‡µç ‡¥Ö‡¥µ‡¥∏‡¥æ‡¥®‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥§‡¥æ‡¥£‡µç. ‡¥Ö‡¥§‡¥ø‡¥®‡¥æ‡µΩ, ‡¥¶‡¥Ø‡¥µ‡¥æ‡¥Ø‡¥ø ‡¥∏‡¥Æ‡µÄ‡¥™‡¥Æ‡µÅ‡¥≥‡µç‡¥≥ ‡¥™‡µÅ‡¥ï ‡¥™‡¥∞‡¥ø‡¥∂‡µã‡¥ß‡¥® ‡¥ï‡µá‡¥®‡µç‡¥¶‡µç‡¥∞‡¥§‡µç‡¥§‡¥ø‡µΩ ‡¥®‡¥ø‡¥®‡µç‡¥®‡µç ‡¥™‡¥∞‡¥ø‡¥∂‡µã‡¥ß‡¥® ‡¥®‡¥ü‡¥§‡µç‡¥§‡µÅ‡¥ï. 

        *GreenLeaf Pollution Center*`;
          
        const success = await sendWhatsAppMessage(user.mobile, message);
    
        if (success) {
          sentNumbers.add(user.mobile); // Mark this number as sent
        }
    
        let verificationStatus = success === "skipped" ? false : success;
    
        // ‚úÖ Update MongoDB with verified status
        await User.findByIdAndUpdate(
          user._id,
          { verified: verificationStatus },
          { new: true, upsert: true }
        );
      }
    }
    
  

    await closeBrowser(); // Close WhatsApp session

    res.status(200).json({
      message: "Messages processed successfully!",
      users: updatedUsers, // ‚úÖ Return updated users to frontend
    });
  } catch (error) {
    console.error("‚ùå Error in sendMessages:", error);
    res.status(500).json({ error: "Failed to send messages" });
  }
};


